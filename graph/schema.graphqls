type Task {
  id: ID!
  name: String!
  description: String!
  detail: String!
  user: Staff!
  status: String!
  project: Project!
  location: Location!
  department: Department!
  staff: [Staff!]!
}

type Room {
  id: ID!
  name: String!
  participants: [Staff!]!
}

type Message {
  id: ID!
  room: Room!
  sender: Staff!
  recipient: Staff!
  content: String!
  timestamp: String!
}

type Staff {
  id: ID!
  name: String!
  department: Department!
  role: String!
  password: String!
  token: String!
}

type Project {
  id: ID!
  name: String!
}

type Location {
  id: ID!
  name: String!
}

type Department {
  id: ID!
  name: String!
}

type login {
  userID: ID!
  token: String!
}

input StaffInput {
  name: String!
  departmentID: ID!
  role: String!
  password: String!
}

input TaskInput {
  name: String!
  description: String!
  detail: String!
  userID: ID!
  status: String!
  projectID: ID!
  locationID: ID!
  departmentID: ID!
  staffIDs: [ID!]!
}

input RoomInput {
  name: String!
  participantIDs: [ID!]!
}

input MessageInput {
  roomID: ID!
  content: String!
  recipientID: ID!
}

type Query {
  tasks(token: String!): [Task!]!
  task(id: ID!, token: String!): Task!

  projects: [Project!]!
  project(id: ID!): Project!

  locations: [Location!]!
  location(id: ID!): Location!

  staff(token: String!): [Staff!]!
  staffMember(id: ID!, token: String!): Staff!

  departments: [Department!]!
  department(id: ID!): Department!

  rooms(token: String!): [Room!]!
  room(id: ID!, token: String!): Room!

  messages(token: String!, roomID: ID!): [Message!]!
  message(id: ID!, token: String!): Message!

  login(name: String!, password: String!): login!
}

type Mutation {
  createTask(input: TaskInput!, token: String!): Task!
  updateTask(id: ID!, input: TaskInput!, token: String!): Task!
  deleteTask(id: ID!, token: String!): Boolean!

  createProject(name: String!, token: String!): Project!
  updateProject(id: ID!, name: String!, token: String!): Project!
  deleteProject(id: ID!, token: String!): Boolean!

  createLocation(name: String!, token: String!): Location!
  updateLocation(id: ID!, name: String!, token: String!): Location!
  deleteLocation(id: ID!, token: String!): Boolean!

  createStaff(input: StaffInput!): Staff!
  updateStaff(id: ID!, input: StaffInput!, token: String!): Staff!
  deleteStaff(id: ID!, token: String!): Boolean!

  createDepartment(name: String!, token: String!): Department!
  updateDepartment(id: ID!, name: String!, token: String!): Department!
  deleteDepartment(id: ID!, token: String!): Boolean!

  createRoom(input: RoomInput!, token: String!): Room!
  updateRoom(id: ID!, input: RoomInput!, token: String!): Room!
  deleteRoom(id: ID!, token: String!): Boolean!

  createMessage(input: MessageInput!, token: String!): Message!
  updateMessage(id: ID!, content: String!, token: String!): Message!
  deleteMessage(id: ID!, token: String!): Boolean!
}

type Subscription {
  messageAdded(token: String!, roomID: ID!): Message!
}
